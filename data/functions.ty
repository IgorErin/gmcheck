//math
sin, cos, tan, abs, sqr, srt : real -> real
random : [range] real -> real
round, floor, ceil : real -> int
lengthdir_x, lengthdir_y : [len] real, [dir] real -> real
point_distance : [x1] real, [y1] real, [x2] real, [y2] real -> real

//draw
draw_self : void -> void
draw_sprite : sprite, [subimg] int, [x] real, [y] real -> void
draw_sprite_ext : sprite, [subimg] int, [x] real, [y] real, [xscale] real, [yscale] real, [rot] real, color, [alpha] alpha -> void
draw_text : [x] real, [y] real, string -> void
draw_circle : [x] real, [y] real, [radius] real, [outline] bool -> void
draw_set_colour : color -> void
draw_get_colour : void -> color
make_colour_rgb : [r] real, [g] real, [b] real -> color
make_colour_hsv : [h] real, [s] real, [v] real -> color
merge_colour : color, color, alpha -> color
colour_get_red   : color -> real
colour_get_green : color -> real
colour_get_blue  : color -> real

//string
chr : keycode -> char
ord : char -> keycode
string_char_at : int -> char
real   : string -> real
string : real -> string
string_copy : string, [index] int, [count] int -> string

//data
ds_list_create : void -> list<void>
ds_list_destroy : list<any> -> void
ds_list_size : list<any> -> int
ds_list_add : list<any>, any -> void //TODO: vararg
ds_list_sort : list<any>, bool -> void

//[DONE] mouse
mouse_check_button : mbutton -> bool
mouse_check_button_pressed : mbutton -> bool
mouse_check_button_released : mbutton -> bool
mouse_clear : mbutton -> void //'bool' in the documentation, a mistake probably
mouse_wheel_up : void -> bool
mouse_wheel_down : void -> bool

//[DONE] keyboard
io_clear : void -> void
keyboard_check : keycode -> bool
keyboard_check_direct : keycode -> bool
keyboard_check_pressed : keycode -> bool
keyboard_check_released : keycode -> bool
keyboard_clear : keycode -> void
keyboard_key_press : keycode -> void
keyboard_key_release : keycode -> void
keyboard_get_map : keycode -> keycode
keyboard_set_map : [dst] keycode, [src] keycode -> void
keyboard_unset_map : keycode -> void
keyboard_get_numlock : void -> bool
keyboard_set_numlock : bool -> void

//collision
place_free : [x] real, [y] real -> bool
position_meeting : [x] real, [y] real, object -> bool //FIXME: object OR instance!
collision_line : [x1] real, [y1] real, [x2] real, [y2] real, object, [prec] bool, [notme] bool -> bool

//movement
move_contact_solid : [x] real, [y] real -> void
move_contact_all :   [x] real, [y] real -> void
motion_add : [dir] real, [speed] real -> void
motion_set : [dir] real, [speed] real -> void

//instance
instance_create_depth : [x] real, [y] real, [depth] int, object -> id
instance_destroy :  void -> void
instance_find :     object, [n] int -> id
instance_number :   object -> int
instance_place :    [x] real, [y] real, object -> id
instance_position : [x] real, [y] real, object -> id
instance_id_get : int -> id

//events
event_inherited : void -> void
event_perform : event, [n] int -> void

//rooms
room_goto : room -> void
room_next : room -> room
room_goto_next :     void -> void
room_goto_previous : void -> void
room_add : void -> room
room_set_height :     room, [height] real -> void
room_set_width :      room, [width]  real -> void
room_set_persistent : room, bool -> void

//game
game_save : [filename] string -> void
game_load : [filename] string -> void
game_end :      void -> void
game_restart :  void -> void
